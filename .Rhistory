query <- paste('COPY ', table_name, ' FROM "', working_dir, '/', csv_name, '" DELIMITER "', sep,'" CSV', ';', sep = '')
query <- paste('COPY ', table_name, ' FROM "', working_dir, '/', csv_name, '" DELIMITER "', sep,'" CSV', ';', sep = "")
source("source/postgis_functions.r")
import_csv(con,"/media/kd/Data/Dropbox/Repos/rds/LEPs", "leps_lut","leps.csv",csv_types,"|")
s2p <- paste('shp2pgsql -c -s 27700 -W "latin1" -I "', working_dir, '/', shp_names[1], '" ', table_name, ' | psql -U ', username, ' -d ', db_name, ' -w', sep="")
query <- paste('COPY ', table_name, ' FROM "', working_dir, '/', csv_name, '" DELIMITER "', sep,'" CSV', ";", sep = "")
shp_names_ext <- "ext.shp"
s2p <- paste('shp2pgsql -c -s 27700 -W "latin1" -I "', working_dir, '/', shp_names[1], '" ', table_name, ' | psql -U ', username, ' -d ', db_name, ' -w', sep="")
shp_names <- "ext.shp"
s2p <- paste('shp2pgsql -c -s 27700 -W "latin1" -I "', working_dir, '/', shp_names[1], '" ', table_name, ' | psql -U ', username, ' -d ', db_name, ' -w', sep="")
source("source/postgis_functions.r")
import_csv(con,"/media/kd/Data/Dropbox/Repos/rds/LEPs", "leps_lut","leps.csv",csv_types,"|")
con <- odbcConnect("cdrcdb", uid = "postgres", pwd="kd")
import_csv(con,"/media/kd/Data/Dropbox/Repos/rds/LEPs", "leps_lut","leps.csv",csv_types,"|")
query <- paste('COPY ', table_name, ' FROM "', working_dir, '/', csv_name, '" DELIMITER "', sep,'" CSV', ";", sep = "")
con <- odbcConnect("cdrcdb", uid = "postgres", pwd="kd")
csv_types <- "lep varchar, la_name varchar, ons_lacode_old varchar, ons_lacode_new varchar, mleps integer"
import_csv(con,"/media/kd/Data/Dropbox/Repos/rds/LEPs", "leps_lut","leps.csv",csv_types,"|")
csv_types <- "lep varchar, la_name varchar, ons_lacode_old varchar, ons_lacode_new varchar, mleps varchar"
import_csv(con,"/media/kd/Data/Dropbox/Repos/rds/LEPs", "leps_lut","leps.csv",csv_types,"|")
con <- odbcConnect("cdrcdb", uid = "postgres", pwd="kd")
csv_types <- "lep varchar, la_name varchar, ons_lacode_old varchar, ons_lacode_new varchar, mleps varchar"
import_csv(con,"/media/kd/Data/Dropbox/Repos/rds/LEPs", "leps_lut","leps.csv",csv_types,"|")
source("source/postgis_functions.r")
con <- odbcConnect("cdrcdb", uid = "postgres", pwd="kd")
csv_types <- "lep varchar, la_name varchar, ons_lacode_old varchar, ons_lacode_new varchar, mleps varchar"
import_csv(con,"/media/kd/Data/Dropbox/Repos/rds/LEPs", "leps_lut","leps.csv",csv_types,"|")
source("source/postgis_functions.r")
library(rgeos)
library(rgdal)
library(dplyr)
db <- create_db("cdrcdb", "postgres", "kd")
con <- odbcConnect("cdrcdb", uid = "postgres", pwd="kd")
import_or_append(con, "/media/kd/Data/Dropbox/Repos/rds/s_data", "oa2011", "england_oa_2011_gen.shp")
import_or_append(con, "/media/kd/Data/Dropbox/Repos/rds/s_data", "lads", "district_borough_unitary_region.shp")
csv_types <- "lep varchar, la_name varchar, ons_lacode_old varchar, ons_lacode_new varchar, mleps integer"
import_csv(con,"/media/kd/Data/Dropbox/Repos/rds/LEPs", "leps_lut","leps.csv",csv_types,"|")
leps_lut <- read.csv("/media/kd/Data/Repos/rds/LEPs/leps.csv", sep="|")
leps_lut <- read.csv("/media/kd/Data/Dropbox/Repos/rds/leps.csv", sep="|")
leps_lut <- read.csv("/media/kd/Data/Dropbox/Repos/rds/LEPs/leps.csv", sep="|")
View(leps_lut)
leps_lut[leps_lut,"Cumbria"]
leps_lut(leps_lut,"Cumbria")
leps_lut[leps_lut["Cumbria"]]
leps_lut[leps_lut$lep, "Cumbria"]
leps_lut[leps_lut$lep "Cumbria"]
leps_lut[leps_lut$lep, "Cumbria",4]
leps_lut[leps_lut$lep = "Cumbria", 4]
leps_lut[leps_lut$lep == "Cumbria", 4]
sub <-leps_lut[leps_lut$lep == "Cumbria", 4]
sub
sub
sub <- as.character(sub)
sub
unique(leps_lut$lep)
as.character(unique(leps_lut$lep))
unique(leps_lut$lep)
source("source/postgis_functions.r")
con <- odbcConnect("cdrcdb", uid = "postgres", pwd="kd")
csv_types <- "lep varchar, la_name varchar, ons_lacode_old varchar, ons_lacode_new varchar, mleps integer"
import_csv(con,"/media/kd/Data/Dropbox/Repos/rds/LEPs", "leps_lut","leps.csv",csv_types,"|")
con <- odbcConnect("cdrcdb", uid = "postgres", pwd="kd")
odbcQuery(con, "DROP TABLE IF EXISTS lad_lep;")
odbcQuery(con, "CREATE TABLE lad_lep AS SELECT * FROM lads RIGHT JOIN leps_lut ON (leps_lut.ons_lacode_new = lads.code);")
odbcQuery(con, "DROP TABLE IF EXISTS leps_fin;")
odbcQuery(con, "CREATE TABLE leps_fin AS SELECT ST_UnaryUnion(ST_Collect(geom)), lad_lep.lep FROM lad_lep  GROUP BY lad_lep.lep;")
leps_ids <- read.csv("/media/kd/Data/Dropbox/Repos/rds/LEPs/lepids.csv", sep="|")
leps_ids <- read.csv("/media/kd/Data/Dropbox/Repos/rds/LEPs/lepids.csv", sep="|")
View(leps_ids)
leps_ids <- read.csv("/media/kd/Data/Dropbox/Repos/rds/LEPs/lepids.csv", sep="|", colClasses = c("character", "character"))
View(leps_ids)
View(leps_lut)
system('pgsql2shp -f /media/kd/Data/Dropbox/Repos/rds/LEPs/data/leps.shp -h localhost -u postgres -P kd cdrcdb "SELECT * FROM leps_fin"')
csv_types <- "lep varchar, la_name varchar, ons_lacode_old varchar, ons_lacode_new varchar, mleps integer, lepid varchar"
import_csv(con,"/media/kd/Data/Dropbox/Repos/rds/LEPs", "leps_lut","leps.csv",csv_types,"|")
con <- odbcConnect("cdrcdb", uid = "postgres", pwd="kd")
csv_types <- "lep varchar, la_name varchar, ons_lacode_old varchar, ons_lacode_new varchar, mleps integer, lepid varchar"
import_csv(con,"/media/kd/Data/Dropbox/Repos/rds/LEPs", "leps_lut","leps.csv",csv_types,"|")
source("source/postgis_functions.r")
csv_types <- "lep varchar, la_name varchar, ons_lacode_old varchar, ons_lacode_new varchar, mleps integer, lepid varchar"
import_csv(con,"/media/kd/Data/Dropbox/Repos/rds/LEPs", "leps_lut","leps.csv",csv_types,"|")
con <- odbcConnect("cdrcdb", uid = "postgres", pwd="kd")
csv_types <- "lep varchar, la_name varchar, ons_lacode_old varchar, ons_lacode_new varchar, mleps integer, lepid varchar"
import_csv(con,"/media/kd/Data/Dropbox/Repos/rds/LEPs", "leps_lut","leps.csv",csv_types,"|")
odbcQuery(con, "DROP TABLE IF EXISTS lad_lep;")
odbcQuery(con, "CREATE TABLE lad_lep AS SELECT * FROM lads RIGHT JOIN leps_lut ON (leps_lut.ons_lacode_new = lads.code);")
odbcQuery(con, "DROP TABLE IF EXISTS leps_fin;")
odbcQuery(con, "CREATE TABLE leps_fin AS SELECT ST_UnaryUnion(ST_Collect(geom)), lad_lep.lepid, lad_lep.lep FROM lad_lep  GROUP BY lad_lep.lep;")
odbcQuery(con, "DROP TABLE IF EXISTS leps_fin;")
odbcQuery(con, "CREATE TABLE leps_fin AS SELECT ST_UnaryUnion(ST_Collect(geom)), lad_lep.lepid, lad_lep.lep FROM lad_lep  GROUP BY lad_lep.lep;")
system('pgsql2shp -f /media/kd/Data/Dropbox/Repos/rds/LEPs/data/leps.shp -h localhost -u postgres -P kd cdrcdb "SELECT * FROM leps_fin"')
setwd("/media/kd/Data/Dropbox/Repos/rds/")
lookup <- read.csv("~/m_code/ckan/lookup.csv")
lookup <- read.csv("m_code/ckan/lookup.csv")
lookup_lad <- unique(lookup[,c("LAD11CD", "LAD11NM")])
View(lookup_lad)
leps_lut <- read.csv(paste(getwd(),"/LEPs/leps.csv", sep = ""), sep="|")
View(leps_lut)
system(paste0('pgsql2shp -f ', getwd(), '/LEPs/data/leps.shp -h localhost -u ', username, ' -P kd ', db_name,' "SELECT * FROM leps_fin"'))
system(paste0('pgsql2shp -f ', getwd(), '/LEPs/data/leps.shp -h localhost -u ', username, ' -P kd ', db_name,' "SELECT * FROM leps_fin"'))
username <- unlist(strsplit(unlist(strsplit(attributes(con)$connection.string, ";"))[5], "="))[2]
db_name <- unlist(strsplit(unlist(strsplit(attributes(con)$connection.string, ";"))[2], "="))[2]
system(paste0('pgsql2shp -f ', getwd(), '/LEPs/data/leps.shp -h localhost -u ', username, ' -P kd ', db_name,' "SELECT * FROM leps_fin"'))
lookup_lad$LAD11CDLEPS <- lookup_lad$LAD11CD
lookup_lad <- unique(lookup[,c("LAD11CD", "LAD11NM")])
lookup_lad$LAD11LEPS <- lookup_lad$LAD11CD
lookup_lad$LAD11LEPS <- ifelse(lookup_lad$LAD11CD=="E09000097","E09000242",lookup_lad$LAD11CD)
lookup_lad$LAD11LEPS <- ifelse(lookup_lad$LAD11CD=="E09000097","E09000242",lookup_lad$LAD11CD)
lookup_lad$LAD11LEPS <- ifelse(lookup_lad$LAD11CD=="E09000097",lookup_lad$LAD11LEPS="E09000242",lookup_lad$LAD11LEPS=lookup_lad$LAD11CD)
lookup_lad$LAD11LEPS <- ifelse(lookup_lad$LAD11CD=="E09000097",lookup_lad$LAD11LEPS<-"E09000242",lookup_lad$LAD11LEPS<-lookup_lad$LAD11CD)
ifelse(lookup_lad$LAD11CD=="E09000097","E09000242",lookup_lad$LAD11CD)
str(lookup_lad$LAD11CD)
lookup_lad$LAD11LEPS <- ifelse(lookup_lad$LAD11CD=="E09000097","E09000242", as.character(lookup_lad$LAD11CD))
lookup_lad$LAD11LEPS <- ifelse(lookup_lad$LAD11CD=="E07000097","E07000242", as.character(lookup_lad$LAD11CD))
lookup_lad$LAD11LEPS <- ifelse(lookup_lad$LAD11CD=="E07000097","E07000242",
ifelse(lookup_lad$LAD11CD=="E07000100","E07000240",
ifelse(lookup_lad$LAD11CD=="E07000101","E07000243",
ifelse(lookup_lad$LAD11CD=="E07000104","E07000241", as.character(lookup_lad$LAD11CD)))))
lookup <- read.csv("m_code/ckan/lookup.csv")
View(lookup)
leps_lut <- read.csv(paste(getwd(),"/LEPs/leps.csv", sep = ""), sep="|")
leps_ids <- read.csv(paste(getwd(),"/LEPs/lepids.csv", sep = ""), sep="|", colClasses = c("character", "character"))
leps_lut$lepid <- leps_ids[match(leps_lut$lep, leps_ids$lepname),1]
write.table(leps_lut, file = paste(getwd(),"/LEPs/leps.csv", sep = ""), row.names=FALSE, quote = FALSE, na="", sep="|")
View(leps_lut)
lookup <- read.csv("m_code/ckan/lookup.csv")
lookup_lad <- unique(lookup[,c("LAD11CD", "LAD11NM")])
lookup_lad$LAD11LEPS <- ifelse(lookup_lad$LAD11CD=="E07000097","E07000242",
ifelse(lookup_lad$LAD11CD=="E07000100","E07000240",
ifelse(lookup_lad$LAD11CD=="E07000101","E07000243",
ifelse(lookup_lad$LAD11CD=="E07000104","E07000241", as.character(lookup_lad$LAD11CD)))))
View(lookup_lad)
View(leps_ids)
View(lookup)
View(lookup_lad)
variables_description <- read.csv("D:/Dropbox/Repos/rds/s_data/england_wales_zip/Adur/variables_description.csv")
View(variables_description)
unique(variables_description$ColumnVariableMeasurementUnit)
unique(variables_description$DatasetId)
View(variables_description)
var_desc <- read.csv("m_code/ckan/var_desc.csv")
View(var_desc)
pg_tables <- unique(var_desc$DatasetId)
pg_cols <- paste(var_desc$ColumnVariableCode, ifelse(var_desc$ColumnVariableMeasurementUnit == "Sum", "integer",
ifelse(var_desc$ColumnVariableMeasurementUnit == "Ratio", "decimal",
ifelse(var_desc$ColumnVariableMeasurementUnit == "Percentage", "decimal",
ifelse(var_desc$ColumnVariableMeasurementUnit == "Years", "integer",
ifelse(var_desc$ColumnVariableMeasurementUnit == "Average", "decimal","integer"))))), sep = " ")
pg_cols[2]
pg_cols[90]
pg_cols[100]
grep("CT0010",pg_cols)
as.character(grep("CT0010",pg_cols))
grep("CT0010",pg_cols, value=TRUE)
paste(grep("CT0010",pg_cols, value=TRUE), sep = ", ")
t <- grep("CT0010",pg_cols, value=TRUE)
paste(t, sep = ", ")
t<- as.character(t)
t
paste(t, sep = ", ")
paste(grep("CT0010",pg_cols, value=TRUE), sep = ", ", collapse = '')
paste(grep("CT0010",pg_cols, value=TRUE), collapse = ', ')
for (i in 1:nrow(pg_tables)){
var_lst <- paste(grep(pg_tables[i],pg_cols, value=TRUE), collapse = ', ')
}
pg_tables[1]
pg_tables <- dataframe(unique(var_desc$DatasetId))
pg_tables <- as.dataframe(unique(var_desc$DatasetId))
pg_tables <- data.frame(unique(var_desc$DatasetId))
View(pg_tables)
for (i in 1:nrow(pg_tables)){
var_lst <- paste(grep(pg_tables[i],pg_cols, value=TRUE), collapse = ', ')
}
pg_tables <- unique(var_desc$DatasetId)
pg_tables <- data.frame(pg_tables)
for (i in 1:nrow(pg_tables)){
var_lst <- paste(grep(pg_tables[i],pg_cols, value=TRUE), collapse = ', ')
}
for (i in 1:nrow(pg_tables$pg_tables)){
var_lst <- paste(grep(pg_tables[i],pg_cols, value=TRUE), collapse = ', ')
}
for (i in 1:nrow(pg_tables[1])){
var_lst <- paste(grep(pg_tables[i],pg_cols, value=TRUE), collapse = ', ')
}
for (i in 1:nrow(pg_tables[1])){
var_lst <- paste(grep(pg_tables$pg_tables[i],pg_cols, value=TRUE), collapse = ', ')
}
for (i in 1:nrow(pg_tables$pg_tables)){
var_lst <- paste(grep(pg_tables$pg_tables[i],pg_cols, value=TRUE), collapse = ', ')
}
for (i in 1:nrow(pg_tables$pg_tables[1])){
var_lst <- paste(grep(pg_tables$pg_tables[i],pg_cols, value=TRUE), collapse = ', ')
}
for (i in 1:nrow(pg_tables[1])){
var_lst <- paste(grep(pg_tables$pg_tables[i],pg_cols, value=TRUE), collapse = ', ')
}
View(lookup_lad)
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
pwd <- readline(prompt="Enter Postgres password: ")
test <- create_db("prescdb", "kd", pwd, spacetable= "open_path")
test <- create_db("prescdb", "kd", pwd, spacetable= "open_path", extensions = c("POSTGIS"))
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
test <- create_db("prescdb", "kd", pwd, spacetable= "open_path", extensions = c("POSTGIS"))
extensions = c("POSTGIS")
extensions = c("POSTGIS")
extensions
extensions[1]
for (i in extensions){ print(i)}
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
test <- create_db("prescdb", "kd", pwd, spacetable= "open_path", extensions = c("POSTGIS"))
test <- create_db("prescdb", "kd", pwd, spacetable= "open_path", extensions = c("POSTGIS","POSTGIS_topology"))
test <- create_db("prescdb", "kd", pwd, spacetable= "open_path", extensions = c("POSTGIS","POSTGIS_topology","POSTGIS_topol"))
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
test <- create_db("prescdb", "kd", pwd, spacetable= "open_path", extensions = c("POSTGIS","POSTGIS_topology","POSTGIS_topol"))
con <- odbcConnect("cdrcdb", uid = "postgres", pwd= pwd)
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
test <- create_db("prescdb", "kd", pwd, spacetable= "safe_path", extensions = c("POSTGIS","POSTGIS_topology"))
con <- odbcConnect("cdrcdb", uid = "postgres", pwd= pwd)
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
con <- odbcConnect("cdrcdb", uid = "postgres", pwd= pwd)
con <- odbcConnect("cdrcdb", uid = "postgres", pwd= pwd)
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
odbcClose(con)
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
library(rgeos)
library(rgdal)
library(dplyr)
setwd("/media/kd/Data/Dropbox/Repos/rds/")
# Read LEPs lookup table
leps_lut <- read.csv(paste(getwd(),"/LEPs/leps.csv", sep = ""), sep="|")
leps_ids <- read.csv(paste(getwd(),"/LEPs/lepids.csv", sep = ""), sep="|", colClasses = c("character", "character"))
leps_lut$lepid <- leps_ids[match(leps_lut$lep, leps_ids$lepname),1]
write.table(leps_lut, file = paste(getwd(),"/LEPs/leps.csv", sep = ""), row.names=FALSE, quote = FALSE, na="", sep="|")
# Add OAs and LADs in PostGIS
db <- create_db("cdrcdb", "postgres", pwd, spacetable= "open_path")
db <- create_db("cdrcdb", "kd", pwd, spacetable= "open_path")
con <- odbcConnect("cdrcdb", uid = "kd", pwd= pwd)
username <- unlist(strsplit(unlist(strsplit(attributes(con)$connection.string, ";"))[5], "="))[2]
db_name <- unlist(strsplit(unlist(strsplit(attributes(con)$connection.string, ";"))[2], "="))[2]
import_or_append(con, paste(getwd(),"/s_data", sep = ""), "oa2011", "england_oa_2011_gen.shp")
import_or_append(con, paste(getwd(),"/s_data", sep = ""), "lads", "district_borough_unitary_region.shp")
con <- odbcConnect("cdrcdb", uid = "kd", pwd= pwd)
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
con <- odbcConnect("cdrcdb", uid = "kd", pwd= pwd)
username <- unlist(strsplit(unlist(strsplit(attributes(con)$connection.string, ";"))[5], "="))[2]
db_name <- unlist(strsplit(unlist(strsplit(attributes(con)$connection.string, ";"))[2], "="))[2]
import_or_append(con, paste(getwd(),"/s_data", sep = ""), "lads", "district_borough_unitary_region.shp")
odbcClose(con)
odbcClose(con)
db <- create_db("cdrcdb", "kd", pwd, spacetable= "open_path", extensions = c("POSTGIS"))
con <- odbcConnect("cdrcdb", uid = "kd", pwd= pwd)
username <- unlist(strsplit(unlist(strsplit(attributes(con)$connection.string, ";"))[5], "="))[2]
db_name <- unlist(strsplit(unlist(strsplit(attributes(con)$connection.string, ";"))[2], "="))[2]
import_or_append(con, paste(getwd(),"/s_data", sep = ""), "oa2011", "england_oa_2011_gen.shp")
import_or_append(con, paste(getwd(),"/s_data", sep = ""), "lads", "district_borough_unitary_region.shp")
csv_types <- "lep varchar, la_name varchar, ons_lacode_old varchar, ons_lacode_new varchar, mleps integer, lepid varchar"
import_csv(con,paste(getwd(),"/LEPs", sep = ""), "leps_lut","leps.csv",csv_types,"|")
odbcQuery(con, "DROP TABLE IF EXISTS lad_lep;")
odbcQuery(con, "CREATE TABLE lad_lep AS SELECT * FROM lads RIGHT JOIN leps_lut ON (leps_lut.ons_lacode_new = lads.code);")
odbcQuery(con, "DROP TABLE IF EXISTS leps_fin;")
odbcQuery(con, "CREATE TABLE leps_fin AS SELECT ST_UnaryUnion(ST_Collect(geom)), lad_lep.lepid, lad_lep.lep FROM lad_lep  GROUP BY lad_lep.lep, lad_lep.lepid;")
system(paste0('pgsql2shp -f ', getwd(), '/LEPs/data/leps.shp -h localhost -u ', username, ' -P ', pwd, ' ', db_name,' "SELECT * FROM leps_fin"'))
var_desc <- read.csv("m_code/ckan/var_desc.csv")
pg_tables <- unique(var_desc$DatasetId)
pg_tables <- data.frame(pg_tables)
pg_cols <- paste(var_desc$ColumnVariableCode, ifelse(var_desc$ColumnVariableMeasurementUnit == "Sum", "integer",
ifelse(var_desc$ColumnVariableMeasurementUnit == "Ratio", "decimal",
ifelse(var_desc$ColumnVariableMeasurementUnit == "Percentage", "decimal",
ifelse(var_desc$ColumnVariableMeasurementUnit == "Years", "integer",
ifelse(var_desc$ColumnVariableMeasurementUnit == "Average", "decimal","integer"))))), sep = " ")
lookup <- read.csv("m_code/ckan/lookup.csv")
lookup_lad <- unique(lookup[,c("LAD11CD", "LAD11NM")])
# Four LAD codes have different codes. Next line creates an extra column with the edited codes as recorded on the official LEPs documents
lookup_lad$LAD11LEPS <- ifelse(lookup_lad$LAD11CD=="E07000097","E07000242",
ifelse(lookup_lad$LAD11CD=="E07000100","E07000240",
ifelse(lookup_lad$LAD11CD=="E07000101","E07000243",
ifelse(lookup_lad$LAD11CD=="E07000104","E07000241", as.character(lookup_lad$LAD11CD)))))
for (i in 1:nrow(pg_tables[1])){
var_lst <- paste(grep(pg_tables$pg_tables[i],pg_cols, value=TRUE), collapse = ', ')
# Create OA tables
odbcQuery(con, paste0("DROP TABLE IF EXISTS ",pg_tables$pg_tables[i],"_oa;"))
odbcQuery(con, paste0("CREATE TABLE ",pg_tables$pg_tables[i],"_oa (GeographyCode varchar, ", var_lst, ");"))
# Create LSOA tables
odbcQuery(con, paste0("DROP TABLE IF EXISTS ",pg_tables$pg_tables[i],"_lsoa;"))
odbcQuery(con, paste0("CREATE TABLE ",pg_tables$pg_tables[i],"_lsoa (GeographyCode varchar, ", var_lst, ");"))
# Create MSOA tables
odbcQuery(con, paste0("DROP TABLE IF EXISTS ",pg_tables$pg_tables[i],"_msoa;"))
odbcQuery(con, paste0("CREATE TABLE ",pg_tables$pg_tables[i],"_msoa (GeographyCode varchar, ", var_lst, ");"))
}
View(pg_tables)
View(leps_ids)
View(leps_lut)
View(lookup)
tb <- as.character(tolower(pg_tables$pg_tables[i]))
tb <- as.character(tolower(pg_tables$pg_tables[i]))
tb <- as.character(tolower(pg_tables$pg_tables[i]))
View(pg_tables)
tb
tb <- as.character(tolower(pg_tables$pg_tables[1]))
tb
for (i in 1:nrow(lookup_lad[2])){
for (x in 1:nrow(pg_tables[1])){
tb <- as.character(tolower(pg_tables$pg_tables[x]))
dir <- as.character(lookup_lad$LAD11NM[i])
odbcQuery(con, paste0("COPY ",tb,"_oa FROM '", getwd(),"/s_data/england_wales_zip/", dir, "/tables/",
as.character(pg_tables$pg_tables[x]),"_oa11.csv' DELIMITER ',' CSV HEADER;"))
odbcQuery(con, paste0("COPY ",tb,"_lsoa FROM '", getwd(),"/s_data/england_wales_zip/", dir, "/tables/",
as.character(pg_tables$pg_tables[x]),"_lsoa11.csv' DELIMITER ',' CSV HEADER;"))
odbcQuery(con, paste0("COPY ",tb,"_msoa FROM '", getwd(),"/s_data/england_wales_zip/", dir, "/tables/",
as.character(pg_tables$pg_tables[x]),"_msoa11.csv' DELIMITER ',' CSV HEADER;"))
}
}
for (i in 1:nrow(lookup_lad[2])){
dir <- as.character(lookup_lad$LAD11NM[i])
print(paste("Load the CSV files of",dir))
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp")
}
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
check_geometries(con,"oa11")
check_geometries(con,"msoa11")
check_geometries(con,"lsoa11")
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
# Load OAs/LSOAs/MSOAs geographies
for (i in 1:nrow(lookup_lad[2])){
dir <- as.character(lookup_lad$LAD11NM[i])
print(paste("Load the CSV files of",dir))
if (i == 1){
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp")
} else {
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp", append=TRUE)
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp", append=TRUE)
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp", append=TRUE)
}
}
# Check for invalid geometries
check_geometries(con,"oa11")
check_geometries(con,"msoa11")
check_geometries(con,"lsoa11")
con <- odbcConnect("cdrcdb", uid = "kd", pwd= pwd)
for (i in 1:nrow(lookup_lad[2])){
dir <- as.character(lookup_lad$LAD11NM[i])
print(paste("Load the CSV files of",dir))
if (i == 1){
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp")
} else {
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp", append=TRUE)
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp", append=TRUE)
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp", append=TRUE)
}
}
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
con <- odbcConnect("cdrcdb", uid = "kd", pwd= pwd)
for (i in 1:nrow(lookup_lad[2])){
dir <- as.character(lookup_lad$LAD11NM[i])
print(paste("Load the CSV files of",dir))
if (i == 1){
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp")
} else {
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp", append=TRUE)
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp", append=TRUE)
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp", append=TRUE)
}
}
check_geometries(con,"oa11")
check_geometries(con,"msoa11")
check_geometries(con,"lsoa11")
odbcCloseAll(con)
shp_names[1]
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
con <- odbcConnect("cdrcdb", uid = "kd", pwd= pwd)
# Load OAs/LSOAs/MSOAs geographies
for (i in 1:nrow(lookup_lad[2])){
dir <- as.character(lookup_lad$LAD11NM[i])
print(paste("Load the CSV files of",dir))
if (i == 1){
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp")
} else {
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp", append=TRUE)
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp", append=TRUE)
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp", append=TRUE)
}
}
# Check for invalid geometries
check_geometries(con,"oa11")
check_geometries(con,"msoa11")
check_geometries(con,"lsoa11")
odbcCloseAll(con)
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
con <- odbcConnect("cdrcdb", uid = "kd", pwd= pwd)
for (i in 1:nrow(lookup_lad[2])){
dir <- as.character(lookup_lad$LAD11NM[i])
print(paste("Load the CSV files of",dir))
if (i == 1){
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp")
} else {
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp", append=TRUE)
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp", append=TRUE)
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp", append=TRUE)
}
}
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
con <- odbcConnect("cdrcdb", uid = "kd", pwd= pwd)
# Load OAs/LSOAs/MSOAs geographies
odbcQuery(con, "DROP TABLE IF EXISTS oa11;")
odbcQuery(con, "DROP TABLE IF EXISTS msoa11;")
odbcQuery(con, "DROP TABLE IF EXISTS lsoa11;")
for (i in 1:nrow(lookup_lad[2])){
dir <- as.character(lookup_lad$LAD11NM[i])
print(paste("Load the CSV files of",dir))
if (i == 1){
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp")
} else {
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp", append=TRUE)
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp", append=TRUE)
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp", append=TRUE)
}
}
con <- odbcConnect("cdrcdb", uid = "kd", pwd= pwd)
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
con <- odbcConnect("cdrcdb", uid = "kd", pwd= pwd)
odbcQuery(con, "DROP TABLE IF EXISTS oa11;")
odbcQuery(con, "DROP TABLE IF EXISTS msoa11;")
odbcQuery(con, "DROP TABLE IF EXISTS lsoa11;")
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
con <- odbcConnect("cdrcdb", uid = "kd", pwd= pwd)
for (i in 1:nrow(lookup_lad[2])){
dir <- as.character(lookup_lad$LAD11NM[i])
print(paste("Load the CSV files of",dir))
if (i == 1){
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp")
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp")
} else {
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "oa11", "_oa11.shp", append=TRUE)
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "msoa11", "_msoa11.shp", append=TRUE)
import_or_append(con, paste(getwd(),"/s_data/england_wales_zip/", dir, "/shapefiles/", sep = ""), "lsoa11", "_lsoa11.shp", append=TRUE)
}
}
check_geometries(con,"oa11")
check_geometries(con,"msoa11")
check_geometries(con,"lsoa11")
odbcCloseAll(con)
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
source("/media/kd/Data/Dropbox/Repos/r_source/postgis_functions.r")
con <- odbcConnect("cdrcdb", uid = "kd", pwd= pwd)
lookup_lad$lepid <- leps_lut[match(lookup_lad$LAD11LEPS, leps_lut$ons_lacode_new),6]
dir.create("/media/kd/Data/temp/LEPs/tables")
dir.create("/media/kd/Data/temp/LEPs/shapefiles")
for (i in leps_ids[,1]){
print(i)
# Extract Census tables
lep_tb_path <- paste0("/media/kd/Data/temp/LEPs/tables/LEP",as.character(i))
dir.create(lep_tb_path)
}
for (i in leps_ids[,1]){
print(i)
# Extract Census tables
lep_tb_path <- paste0("/media/kd/Data/temp/LEPs/tables/LEP",as.character(i))
v_lads <- v_lads[complete.cases(data.frame(lookup_lad[lookup_lad$lepid == i,1])),]
v_lads <- data.frame(v_lads)
field_value_oa <- as.character(unique(lookup[ which( lookup$LAD11CD %in% v_lads$v_lads ),1]))
field_value_lsoa <- as.character(unique(lookup[ which( lookup$LAD11CD %in% v_lads$v_lads ),2]))
field_value_msoa <- as.character(unique(lookup[ which( lookup$LAD11CD %in% v_lads$v_lads ),4]))
for (x in 1:nrow(pg_tables[1])){
tb <- as.character(tolower(pg_tables$pg_tables[x]))
get_subset_table(paste0(tb,"_oa"), "geographycode", field_value_oa, paste0(lep_tb_path,"/",toupper(tb),"_oa11.csv"),con)
get_subset_table(paste0(tb,"_lsoa"), "geographycode", field_value_lsoa, paste0(lep_tb_path,"/",toupper(tb),"_lsoa11.csv"),con)
get_subset_table(paste0(tb,"_msoa"), "geographycode", field_value_msoa, paste0(lep_tb_path,"/",toupper(tb),"_msoa11.csv"),con)
}
}
v_lads <- v_lads[complete.cases(data.frame(lookup_lad[lookup_lad$lepid == i,1])),]
for (i in leps_ids[,1]){
print(i)
# Extract Census tables
lep_tb_path <- paste0("/media/kd/Data/temp/LEPs/tables/LEP",as.character(i))
v_lads <- data.frame(lookup_lad[lookup_lad$lepid == i,1])
v_lads <- v_lads[complete.cases(v_lads),]
v_lads <- data.frame(v_lads)
field_value_oa <- as.character(unique(lookup[ which( lookup$LAD11CD %in% v_lads$v_lads ),1]))
field_value_lsoa <- as.character(unique(lookup[ which( lookup$LAD11CD %in% v_lads$v_lads ),2]))
field_value_msoa <- as.character(unique(lookup[ which( lookup$LAD11CD %in% v_lads$v_lads ),4]))
for (x in 1:nrow(pg_tables[1])){
tb <- as.character(tolower(pg_tables$pg_tables[x]))
get_subset_table(paste0(tb,"_oa"), "geographycode", field_value_oa, paste0(lep_tb_path,"/",toupper(tb),"_oa11.csv"),con)
get_subset_table(paste0(tb,"_lsoa"), "geographycode", field_value_lsoa, paste0(lep_tb_path,"/",toupper(tb),"_lsoa11.csv"),con)
get_subset_table(paste0(tb,"_msoa"), "geographycode", field_value_msoa, paste0(lep_tb_path,"/",toupper(tb),"_msoa11.csv"),con)
}
}
install.packages("migest")
install.packages("circlize")
library("migest")
demo(cfplot_reg2, package = "migest", ask = FALSE)
demo(cfplot_reg2, package = "migest", ask = FALSE)
demo(cfplot_reg2, package = "migest", ask = FALSE)
dev.copy2pdf(file = "cfplot_reg2.pdf", height=10, width=10)
file.show("cfplot_reg2.pdf")
